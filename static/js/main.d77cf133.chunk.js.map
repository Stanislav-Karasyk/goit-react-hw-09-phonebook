{"version":3,"sources":["redux/auth/auth-selectors.js","redux/auth/auth-operations.js","redux/auth/auth-actions.js","components/appBar/AppBar.module.css","components/container/Container.module.css","redux/contact/contact-actions.js","redux/contact/contact-reducer.js","redux/auth/auth-reducer.js","redux/store.js","components/authNav/AuthNav.js","components/navigation/Navigation.js","components/userMenu/blank-profile-picture.webp","components/userMenu/UserMenu.js","components/appBar/AppBar.js","components/container/Container.js","components/PrivateRoute.js","components/PublicRoute.js","components/App.js","index.js"],"names":["getIsAuthenticated","state","auth","isAuthenticated","getUsername","user","name","getError","error","axios","defaults","baseURL","token","headers","common","Authorization","register","credentials","dispatch","a","registerRequest","post","response","data","registerSuccess","registerError","message","logIn","loginRequest","loginSuccess","loginError","logOut","logoutRequest","logoutSuccess","logoutError","getCurrentUser","getState","persistedToken","getCurrentUserRequest","get","getCurrentUserSuccess","getCurrentUserError","createAction","module","exports","fetchContactRequest","fetchContactSuccess","fetchContactError","createContactRequest","createContactSuccess","createContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","addFilterValue","contacts","createReducer","_","payload","filter","item","id","loading","hendleError","clearError","combineReducers","initialUserState","email","setError","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contact","contactReducer","devTools","process","persistor","persistStore","AuthNav","className","exact","to","activeClassName","Navigation","isLoggedIn","useSelector","UserMenu","useDispatch","onLogOut","useCallback","src","defaultAvatar","alt","width","type","onClick","AppBar","styles","header","Container","children","container","PrivateRoute","redirectTo","routeProps","PublicRoute","restricted","HomePage","lazy","RegisterPage","LoginPage","ContactsPage","App","useEffect","fallback","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d77cf133.chunk.js","sourcesContent":["const getIsAuthenticated = state => state.auth.isAuthenticated;\r\n\r\nconst getUsername = state => state.auth.user.name;\r\n\r\nconst getError = state => state.auth.error;\r\n\r\nexport { getIsAuthenticated, getUsername, getError};\r\n","import axios from 'axios';\r\nimport {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n} from './auth-actions.js';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nconst register = credentials => async dispatch => {\r\n  dispatch(registerRequest());\r\n\r\n  try {\r\n    const response = await axios.post('/users/signup', credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(registerSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(registerError(error.message));\r\n  }\r\n};\r\n\r\nconst logIn = credentials => async dispatch => {\r\n  dispatch(loginRequest());\r\n\r\n  try {\r\n    const response = await axios.post('/users/login', credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(loginSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(loginError(error.message));\r\n  }\r\n};\r\n\r\nconst logOut = () => async dispatch => {\r\n  dispatch(logoutRequest());\r\n\r\n  try {\r\n    await axios.post('/users/logout');\r\n\r\n    token.unset();\r\n    dispatch(logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(logoutError(error.message));\r\n  }\r\n};\r\n\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n\r\n  dispatch(getCurrentUserRequest());\r\n\r\n  try {\r\n    const response = await axios.get('/users/current');\r\n\r\n    dispatch(getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(getCurrentUserError(error.message));\r\n  }\r\n};\r\n\r\nexport { register, logIn, logOut, getCurrentUser };\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\nexport {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__2gnLt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2tFUV\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst fetchContactRequest = createAction('contacts/fetchContactRequest');\r\nconst fetchContactSuccess = createAction('contacts/fetchContactSuccess');\r\nconst fetchContactError = createAction('contacts/fetchContactError');\r\n\r\nconst createContactRequest = createAction('contacts/createContactRequest');\r\nconst createContactSuccess = createAction('contacts/createContactSuccess');\r\nconst createContactError = createAction('contacts/createContactError');\r\n\r\nconst deleteContactRequest = createAction('contacts/deleteContactRequest');\r\nconst deleteContactSuccess = createAction('contacts/deleteContactSuccess');\r\nconst deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nconst addFilterValue = createAction('contact/addFilterValue');\r\n\r\nexport {\r\n  addFilterValue,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  createContactRequest,\r\n  createContactSuccess,\r\n  createContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  addFilterValue,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  createContactRequest,\r\n  createContactSuccess,\r\n  createContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from './contact-actions';\r\nimport { logoutSuccess } from '../auth/auth-actions';\r\n\r\nconst contacts = createReducer([], {\r\n  [fetchContactSuccess]: (_, { payload }) => payload,\r\n  [createContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) => [\r\n    ...state.filter(item => item.id !== payload),\r\n  ],\r\n  [logoutSuccess]: () => [],\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [addFilterValue]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactRequest]: () => true,\r\n  [fetchContactSuccess]: () => false,\r\n  [fetchContactError]: () => false,\r\n  [createContactRequest]: () => true,\r\n  [createContactSuccess]: () => false,\r\n  [createContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst hendleError = (_, { payload }) => payload.response.data;\r\nconst clearError = () => null;\r\n\r\nconst error = createReducer(null, {\r\n  [fetchContactRequest]: clearError,\r\n  [fetchContactError]: hendleError,\r\n  [createContactRequest]: clearError,\r\n  [createContactError]: hendleError,\r\n  [deleteContactRequest]: clearError,\r\n  [deleteContactError]: hendleError,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n  loading,\r\n  error,\r\n});\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  registerSuccess,\r\n  registerError,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n} from './auth-actions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [registerSuccess]: (_, { payload }) => payload.user,\r\n  [loginSuccess]: (_, { payload }) => payload.user,\r\n  [logoutSuccess]: () => initialUserState,\r\n  [getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [registerSuccess]: (_, { payload }) => payload.token,\r\n  [loginSuccess]: (_, { payload }) => payload.token,\r\n  [logoutSuccess]: () => null,\r\n});\r\n\r\nconst setError = (_, { payload }) => payload;\r\n\r\nconst error = createReducer(null, {\r\n  [registerError]: setError,\r\n  [loginError]: setError,\r\n  [logoutError]: setError,\r\n  [getCurrentUserError]: setError,\r\n});\r\n\r\nconst isAuthenticated = createReducer(false, {\r\n  [registerSuccess]: () => true,\r\n  [loginSuccess]: () => true,\r\n  [getCurrentUserSuccess]: () => true,\r\n  [registerError]: () => false,\r\n  [loginError]: () => false,\r\n  [getCurrentUserError]: () => false,\r\n  [logoutSuccess]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  isAuthenticated,\r\n  token,\r\n  error,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport contactReducer from './contact/contact-reducer';\r\nimport authReducer from './auth/auth-reducer';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    contact: contactReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst AuthNav = () => {\r\n  return (\r\n    <nav>\r\n      <ul className=\"list\">\r\n        <li>\r\n          <NavLink\r\n            exact\r\n            to=\"/register\"\r\n            className=\"NavLink\"\r\n            activeClassName=\"NavLinkActive\"\r\n          >\r\n            Registration\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink\r\n            exact\r\n            to=\"/login\"\r\n            className=\"NavLink\"\r\n            activeClassName=\"NavLinkActive\"\r\n          >\r\n            Login\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default AuthNav;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { getIsAuthenticated } from '../../redux/auth/auth-selectors';\r\n\r\nexport default function Navigation() {\r\n  const isLoggedIn = useSelector(getIsAuthenticated);\r\n  return (\r\n    <nav>\r\n      <ul className=\"list\">\r\n        <li>\r\n          <NavLink\r\n            to=\"/\"\r\n            exact\r\n            className=\"NavLink\"\r\n            activeClassName=\"NavLinkActive\"\r\n          >\r\n            Home\r\n          </NavLink>\r\n        </li>\r\n        {isLoggedIn && (\r\n          <li>\r\n            <NavLink\r\n              to=\"/contacts\"\r\n              exact\r\n              className=\"NavLink\"\r\n              activeClassName=\"NavLinkActive\"\r\n            >\r\n              Contacts\r\n            </NavLink>\r\n          </li>\r\n        )}\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/blank-profile-picture.efadb13d.webp\";","import React, { useCallback } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { logOut } from '../../redux/auth/auth-operations';\r\nimport { getUsername } from '../../redux/auth/auth-selectors';\r\nimport defaultAvatar from './blank-profile-picture.webp';\r\n\r\nexport default function UserMenu() {\r\n  const dispatch = useDispatch();\r\n  const name = useSelector(getUsername);\r\n\r\n  const onLogOut = useCallback(() => {\r\n    dispatch(logOut());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div>\r\n      <img src={defaultAvatar} alt=\"\" width=\"32\" />\r\n      <span>Welcome, {name}</span>\r\n      <button type=\"button\" onClick={onLogOut}>\r\n        Logout\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { getIsAuthenticated } from '../../redux/auth/auth-selectors';\r\nimport AuthNav from '../authNav/AuthNav';\r\nimport Navigation from '../navigation/Navigation';\r\nimport UserMenu from '../userMenu/UserMenu';\r\nimport styles from './AppBar.module.css';\r\n\r\nexport default function AppBar() {\r\n  const isLoggedIn = useSelector(getIsAuthenticated);\r\n  return (\r\n    <header className={styles.header}>\r\n      <Navigation />\r\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\r\n    </header>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport styles from './Container.module.css';\r\n\r\nconst Container = ({ children }) => <div className={styles.container}>{children}</div>;\r\n\r\nexport default Container;\r\n\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { getIsAuthenticated } from '../redux/auth/auth-selectors';\r\n\r\nexport default function PrivateRoute({\r\n  isAuthenticated,\r\n  redirectTo,\r\n  children,\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(getIsAuthenticated);\r\n\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\r\n    </Route>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { getIsAuthenticated } from '../redux/auth/auth-selectors';\r\n\r\nexport default function PublicRoute({\r\n  isAuthenticated,\r\n  redirectTo,\r\n  children,\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(getIsAuthenticated);\r\n\r\n  return (\r\n      <Route {...routeProps}>\r\n          {isLoggedIn && routeProps.restricted ? (\r\n              <Redirect to={redirectTo} />\r\n          ) : (\r\n              children\r\n          )}\r\n      </Route>\r\n  );\r\n}","import React, { Suspense, lazy, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Switch } from 'react-router-dom';\r\nimport { getCurrentUser } from '../redux/auth/auth-operations';\r\nimport AppBar from './appBar/AppBar';\r\nimport Container from '../components/container/Container';\r\nimport PrivateRoute from './PrivateRoute';\r\nimport PublicRoute from './PublicRoute';\r\n\r\nconst HomePage = lazy(() =>\r\n  import('../pages/homePage/HomePage' /* webpackChunkName: \"homePage\" */),\r\n);\r\nconst RegisterPage = lazy(() =>\r\n  import(\r\n    '../pages/registerPage/RegisterPage' /* webpackChunkName: \"registerPage\" */\r\n  ),\r\n);\r\nconst LoginPage = lazy(() =>\r\n  import('../pages/loginPage/LoginPage' /* webpackChunkName: \"loginPage\" */),\r\n);\r\nconst ContactsPage = lazy(() =>\r\n  import(\r\n    '../pages/contactsPage/ContactsPage' /* webpackChunkName: \"contactsPage\" */\r\n  ),\r\n);\r\n\r\nexport default function App() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getCurrentUser());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Container>\r\n      <AppBar />\r\n      <Suspense fallback={<h1>Loading...</h1>}>\r\n        <Switch>\r\n          <PublicRoute exact path=\"/\">\r\n            <HomePage />\r\n          </PublicRoute>\r\n\r\n          <PublicRoute path=\"/register\" restricted redirectTo=\"/contacts\">\r\n            <RegisterPage />\r\n          </PublicRoute>\r\n\r\n          <PublicRoute path=\"/login\" restricted redirectTo=\"/contacts\">\r\n            <LoginPage />\r\n          </PublicRoute>\r\n\r\n          <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\r\n            <ContactsPage />\r\n          </PrivateRoute>\r\n        </Switch>\r\n      </Suspense>\r\n    </Container>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport store from './redux/store';\r\nimport App from './components/App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store.store}>\r\n      <PersistGate loading={null} persistor={store.persistor}>\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}