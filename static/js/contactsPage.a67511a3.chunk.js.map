{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/contactForm/ContactForm.js","redux/contact/contact-operations.js","redux/contact/contact-selectors.js","components/contactList/ContactList.js","components/filter/Filter.js","pages/contactsPage/ContactsPage.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","initialState","name","number","ContactForm","dispatch","useDispatch","useState","user","setUser","useEffect","a","fetchContactRequest","axios","get","data","fetchContactSuccess","fetchContactError","message","handleInput","e","target","prevUser","onSubmit","preventDefault","contact","createContactRequest","post","createContactSuccess","createContactError","createContact","type","onChange","getFilter","state","filter","getLoadind","loading","getFilteredContacts","createSelector","contacts","toLowerCase","includes","ContactList","useSelector","onHandleChange","id","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","className","map","onClick","Filter","addFilterValue","ContactsPage"],"mappings":"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","file":"static/js/contactsPage.a67511a3.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport {\r\n  createContact,\r\n  fetchContacts,\r\n} from '../../redux/contact/contact-operations';\r\n\r\nconst initialState = {\r\n  name: '',\r\n  number: '',\r\n};\r\n\r\nexport default function ContactForm() {\r\n  const dispatch = useDispatch();\r\n\r\n  const [user, setUser] = useState(initialState);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  const handleInput = e => {\r\n    const { name, value } = e.target;\r\n    setUser(prevUser => ({ ...prevUser, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    dispatch(createContact(user));\r\n    setUser(initialState);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label>\r\n        Name\r\n        <input\r\n          name=\"name\"\r\n          type=\"text\"\r\n          onChange={handleInput}\r\n          value={user.name}\r\n        />\r\n      </label>\r\n      <label>\r\n        Number\r\n        <input\r\n          name=\"number\"\r\n          type=\"text\"\r\n          onChange={handleInput}\r\n          value={user.number}\r\n        />\r\n      </label>\r\n      <button type=\"submit\">Add contacts</button>\r\n    </form>\r\n  );\r\n}\r\n","import axios from 'axios';\r\nimport {\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  createContactRequest,\r\n  createContactSuccess,\r\n  createContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from './contact-actions';\r\n\r\nconst fetchContacts = () => async dispatch => {\r\n  dispatch(fetchContactRequest());\r\n  try {\r\n    const { data } = await axios.get('/contacts');\r\n    dispatch(fetchContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactError(error.message));\r\n  }\r\n};\r\n\r\nconst createContact = ({ name, number }) => async dispatch => {\r\n  const contact = {\r\n    name,\r\n    number,\r\n  };\r\n  dispatch(createContactRequest());\r\n  try {\r\n    const { data } = await axios.post('/contacts', contact);\r\n    dispatch(createContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(createContactError(error.message));\r\n  }\r\n};\r\n\r\nconst deleteContact = id => async dispatch => {\r\n  dispatch(deleteContactRequest());\r\n  try {\r\n    await axios.delete(`/contacts/${id}`);\r\n    dispatch(deleteContactSuccess(id));\r\n  } catch (error) {\r\n    dispatch(deleteContactError(error.message));\r\n  }\r\n};\r\n\r\nexport { fetchContacts, createContact, deleteContact };\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getContacts = state => state.contact.contacts;\r\n\r\nconst getFilter = state => state.contact.filter;\r\n\r\nconst getLoadind = state => state.contact.loading;\r\n\r\nconst getError = state => state.contact.error;\r\n\r\nconst getFilteredContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) =>\r\n    contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n    ),\r\n);\r\n\r\nexport { getContacts, getFilter, getLoadind, getError, getFilteredContacts };\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteContact } from '../../redux/contact/contact-operations';\r\nimport {\r\n  getFilteredContacts,\r\n  getLoadind,\r\n} from '../../redux/contact/contact-selectors';\r\n\r\nexport default function ContactList() {\r\n  const dispatch = useDispatch();\r\n\r\n  const contacts = useSelector(getFilteredContacts);\r\n  const loading = useSelector(getLoadind);\r\n\r\n  const onHandleChange = e => {\r\n    dispatch(deleteContact(e.target.id));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loading && <h2>Loading...</h2>}\r\n      <ul className=\"list\">\r\n        {contacts.map(({ name, id, number }) => (\r\n          <li key={id}>\r\n            <p>\r\n              {name}: {number}\r\n              <button id={id} type=\"button\" onClick={onHandleChange}>\r\n                Delete\r\n              </button>\r\n            </p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addFilterValue } from '../../redux/contact/contact-actions';\r\nimport { getFilter } from '../../redux/contact/contact-selectors';\r\n\r\nexport default function Filter() {\r\n  const dispatch = useDispatch();\r\n  const filter = useSelector(getFilter);\r\n\r\n  const onHandleChange = e => dispatch(addFilterValue(e.target.value));\r\n\r\n  return (\r\n    <label>\r\n      Find contacts by name\r\n      <input\r\n        name=\"filter\"\r\n        type=\"text\"\r\n        onChange={onHandleChange}\r\n        value={filter}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ContactForm from '../../components/contactForm/ContactForm';\r\nimport ContactList from '../../components/contactList/ContactList';\r\nimport Filter from '../../components/filter/Filter';\r\n\r\nexport default function ContactsPage() {\r\n  return (\r\n    <div>\r\n      <h2>Add contacts</h2>\r\n      <ContactForm />\r\n      <h2>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}